version: '3.8'
services:
  node:
    image: sigp/lighthouse:v2.1.5-modern
    hostname: node
    restart: always
    command: |
      lighthouse beacon_node
      --network gnosis
      --checkpoint-sync-url https://rpc-gbc.gnosischain.com/
      --discovery-port 12000
      --port 13000
      --eth1-endpoints $XDAI_RPC_URL
      --datadir /home/.eth2/beaconchaindata
      --http-address 0.0.0.0
      --http
      --enr-address $PUBLIC_IP
      --enr-udp-port 12000
      --target-peers $TARGET_PEERS
      --metrics
      --metrics-address 0.0.0.0
      --metrics-allow-origin *
      --debug-level $LOG_LEVEL
    ports:
      - '12000:12000/udp'
      - '13000:13000'
    volumes:
      - ./node_db:/home/.eth2/beaconchaindata
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
  node-private-slasher:
    image: sigp/lighthouse:v2.1.5-modern
    hostname: node
    restart: always
    command: |
      lighthouse beacon_node
      --network gnosis
      --checkpoint-sync-url https://rpc-gbc.gnosischain.com/
      --discovery-port 12000
      --port 13000
      --eth1-endpoints $XDAI_RPC_URL
      --datadir /home/.eth2/beaconchaindata
      --slasher-dir /home/.eth2/slasherdata
      --http-address 0.0.0.0
      --http
      --target-peers $TARGET_PEERS
      --metrics
      --metrics-address 0.0.0.0
      --metrics-allow-origin *
      --debug-level $LOG_LEVEL
      --slasher
      --slasher-max-db-size 32
    ports:
      - '12000:12000/udp'
      - '13000:13000'
    volumes:
      - ./node_db:/home/.eth2/beaconchaindata
      - ./slasher_db:/home/.eth2/slasherdata
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
  node-public-slasher:
    image: sigp/lighthouse:v2.1.5-modern
    hostname: node
    restart: always
    command: |
      lighthouse beacon_node
      --network gnosis
      --checkpoint-sync-url https://rpc-gbc.gnosischain.com/
      --discovery-port 12000
      --port 13000
      --eth1-endpoints $XDAI_RPC_URL
      --datadir /home/.eth2/beaconchaindata
      --slasher-dir /home/.eth2/slasherdata
      --http-address 0.0.0.0
      --http
      --target-peers $TARGET_PEERS
      --metrics
      --metrics-address 0.0.0.0
      --metrics-allow-origin *
      --debug-level $LOG_LEVEL
      --slasher
      --slasher-max-db-size 32
      --slasher-broadcast
    ports:
      - '12000:12000/udp'
      - '13000:13000'
    volumes:
      - ./node_db:/home/.eth2/beaconchaindata
      - ./slasher_db:/home/.eth2/slasherdata
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
  validator-import:
    image: sigp/lighthouse:v2.1.5-modern
    command: |
      lighthouse account_manager validator import
      --network gnosis
      --password-file /root/sbc/keys/keystore_password.txt
      --reuse-password
      --directory /root/sbc/keys/validator_keys
      --datadir /root/sbc
    volumes:
      - ./keys:/root/sbc/keys
      - ./validators:/root/sbc/validators
  validator:
    image: sigp/lighthouse:v2.1.5-modern
    hostname: validator
    restart: always
    depends_on:
      - node
    command: |
      lighthouse validator_client
      --network gnosis
      --enable-doppelganger-protection
      --validators-dir /root/sbc/validators
      --beacon-nodes http://node:5052
      --graffiti-file /root/sbc/config/graffiti.yml
      --metrics
      --metrics-address 0.0.0.0
      --metrics-allow-origin *
      --metrics-port 5064
    volumes:
      - ./config:/root/sbc/config
      - ./validators:/root/sbc/validators
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
  prometheus:
    image: prom/prometheus:latest
    restart: always
    depends_on:
      - node
      - validator
    command: |
      --web.listen-address=0.0.0.0:9090
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - type: bind
        source: ./prometheus/scrape-targets
        target: /prometheus/targets
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
volumes:
  prometheus-data:
